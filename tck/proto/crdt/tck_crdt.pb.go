// Copyright 2020 Lightbend Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Extension for specifying which field in a message is to be considered an
// entity key, for the purposes associating gRPC calls with entities and
// sharding.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.2
// source: tck_crdt.proto

package crdt

import (
	context "context"
	_ "github.com/cloudstateio/go-support/cloudstate"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	_ "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// copy from crdt.proto
type CrdtClock int32

const (
	// Use the default clock for deciding the last write, which is the system clocks
	// milliseconds since epoch.
	CrdtClock_DEFAULT CrdtClock = 0
	// Use the reverse semantics with the default clock, to enable first write wins.
	CrdtClock_REVERSE CrdtClock = 1
	// Use a custom clock value, set using custom_clock_value.
	CrdtClock_CUSTOM CrdtClock = 2
	// Use a custom clock value, but automatically increment it by one if the clock
	// value from the current value is equal to the custom_clock_value.
	CrdtClock_CUSTOM_AUTO_INCREMENT CrdtClock = 3
)

// Enum value maps for CrdtClock.
var (
	CrdtClock_name = map[int32]string{
		0: "DEFAULT",
		1: "REVERSE",
		2: "CUSTOM",
		3: "CUSTOM_AUTO_INCREMENT",
	}
	CrdtClock_value = map[string]int32{
		"DEFAULT":               0,
		"REVERSE":               1,
		"CUSTOM":                2,
		"CUSTOM_AUTO_INCREMENT": 3,
	}
)

func (x CrdtClock) Enum() *CrdtClock {
	p := new(CrdtClock)
	*p = x
	return p
}

func (x CrdtClock) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CrdtClock) Descriptor() protoreflect.EnumDescriptor {
	return file_tck_crdt_proto_enumTypes[0].Descriptor()
}

func (CrdtClock) Type() protoreflect.EnumType {
	return &file_tck_crdt_proto_enumTypes[0]
}

func (x CrdtClock) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CrdtClock.Descriptor instead.
func (CrdtClock) EnumDescriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{0}
}

type VoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Actions []*VoteRequestAction `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *VoteRequest) Reset() {
	*x = VoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteRequest) ProtoMessage() {}

func (x *VoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteRequest.ProtoReflect.Descriptor instead.
func (*VoteRequest) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{0}
}

func (x *VoteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VoteRequest) GetActions() []*VoteRequestAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

type VoteRequestAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//	*VoteRequestAction_Get
	//	*VoteRequestAction_Delete
	//	*VoteRequestAction_Vote
	Action isVoteRequestAction_Action `protobuf_oneof:"action"`
}

func (x *VoteRequestAction) Reset() {
	*x = VoteRequestAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteRequestAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteRequestAction) ProtoMessage() {}

func (x *VoteRequestAction) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteRequestAction.ProtoReflect.Descriptor instead.
func (*VoteRequestAction) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{1}
}

func (m *VoteRequestAction) GetAction() isVoteRequestAction_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *VoteRequestAction) GetGet() *Get {
	if x, ok := x.GetAction().(*VoteRequestAction_Get); ok {
		return x.Get
	}
	return nil
}

func (x *VoteRequestAction) GetDelete() *Delete {
	if x, ok := x.GetAction().(*VoteRequestAction_Delete); ok {
		return x.Delete
	}
	return nil
}

func (x *VoteRequestAction) GetVote() *VoteVote {
	if x, ok := x.GetAction().(*VoteRequestAction_Vote); ok {
		return x.Vote
	}
	return nil
}

type isVoteRequestAction_Action interface {
	isVoteRequestAction_Action()
}

type VoteRequestAction_Get struct {
	Get *Get `protobuf:"bytes,1,opt,name=get,proto3,oneof"`
}

type VoteRequestAction_Delete struct {
	Delete *Delete `protobuf:"bytes,2,opt,name=delete,proto3,oneof"`
}

type VoteRequestAction_Vote struct {
	Vote *VoteVote `protobuf:"bytes,3,opt,name=vote,proto3,oneof"`
}

func (*VoteRequestAction_Get) isVoteRequestAction_Action() {}

func (*VoteRequestAction_Delete) isVoteRequestAction_Action() {}

func (*VoteRequestAction_Vote) isVoteRequestAction_Action() {}

type VoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelfVote bool   `protobuf:"varint,1,opt,name=selfVote,proto3" json:"selfVote,omitempty"`
	Voters   uint32 `protobuf:"varint,2,opt,name=voters,proto3" json:"voters,omitempty"`
	VotesFor uint32 `protobuf:"varint,3,opt,name=votesFor,proto3" json:"votesFor,omitempty"`
}

func (x *VoteResponse) Reset() {
	*x = VoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteResponse) ProtoMessage() {}

func (x *VoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteResponse.ProtoReflect.Descriptor instead.
func (*VoteResponse) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{2}
}

func (x *VoteResponse) GetSelfVote() bool {
	if x != nil {
		return x.SelfVote
	}
	return false
}

func (x *VoteResponse) GetVoters() uint32 {
	if x != nil {
		return x.Voters
	}
	return 0
}

func (x *VoteResponse) GetVotesFor() uint32 {
	if x != nil {
		return x.VotesFor
	}
	return 0
}

type GCounterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Actions []*GCounterRequestAction `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *GCounterRequest) Reset() {
	*x = GCounterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCounterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCounterRequest) ProtoMessage() {}

func (x *GCounterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCounterRequest.ProtoReflect.Descriptor instead.
func (*GCounterRequest) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{3}
}

func (x *GCounterRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GCounterRequest) GetActions() []*GCounterRequestAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

type GCounterRequestAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//	*GCounterRequestAction_Get
	//	*GCounterRequestAction_Delete
	//	*GCounterRequestAction_Increment
	Action isGCounterRequestAction_Action `protobuf_oneof:"action"`
}

func (x *GCounterRequestAction) Reset() {
	*x = GCounterRequestAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCounterRequestAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCounterRequestAction) ProtoMessage() {}

func (x *GCounterRequestAction) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCounterRequestAction.ProtoReflect.Descriptor instead.
func (*GCounterRequestAction) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{4}
}

func (m *GCounterRequestAction) GetAction() isGCounterRequestAction_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *GCounterRequestAction) GetGet() *Get {
	if x, ok := x.GetAction().(*GCounterRequestAction_Get); ok {
		return x.Get
	}
	return nil
}

func (x *GCounterRequestAction) GetDelete() *Delete {
	if x, ok := x.GetAction().(*GCounterRequestAction_Delete); ok {
		return x.Delete
	}
	return nil
}

func (x *GCounterRequestAction) GetIncrement() *GCounterIncrement {
	if x, ok := x.GetAction().(*GCounterRequestAction_Increment); ok {
		return x.Increment
	}
	return nil
}

type isGCounterRequestAction_Action interface {
	isGCounterRequestAction_Action()
}

type GCounterRequestAction_Get struct {
	Get *Get `protobuf:"bytes,1,opt,name=get,proto3,oneof"`
}

type GCounterRequestAction_Delete struct {
	Delete *Delete `protobuf:"bytes,2,opt,name=delete,proto3,oneof"`
}

type GCounterRequestAction_Increment struct {
	Increment *GCounterIncrement `protobuf:"bytes,3,opt,name=increment,proto3,oneof"`
}

func (*GCounterRequestAction_Get) isGCounterRequestAction_Action() {}

func (*GCounterRequestAction_Delete) isGCounterRequestAction_Action() {}

func (*GCounterRequestAction_Increment) isGCounterRequestAction_Action() {}

type GCounterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *GCounterValue `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GCounterResponse) Reset() {
	*x = GCounterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCounterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCounterResponse) ProtoMessage() {}

func (x *GCounterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCounterResponse.ProtoReflect.Descriptor instead.
func (*GCounterResponse) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{5}
}

func (x *GCounterResponse) GetValue() *GCounterValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type PNCounterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Actions []*PNCounterRequestAction `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *PNCounterRequest) Reset() {
	*x = PNCounterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PNCounterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PNCounterRequest) ProtoMessage() {}

func (x *PNCounterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PNCounterRequest.ProtoReflect.Descriptor instead.
func (*PNCounterRequest) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{6}
}

func (x *PNCounterRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PNCounterRequest) GetActions() []*PNCounterRequestAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

type PNCounterRequestAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//	*PNCounterRequestAction_Get
	//	*PNCounterRequestAction_Delete
	//	*PNCounterRequestAction_Increment
	//	*PNCounterRequestAction_Decrement
	Action isPNCounterRequestAction_Action `protobuf_oneof:"action"`
}

func (x *PNCounterRequestAction) Reset() {
	*x = PNCounterRequestAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PNCounterRequestAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PNCounterRequestAction) ProtoMessage() {}

func (x *PNCounterRequestAction) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PNCounterRequestAction.ProtoReflect.Descriptor instead.
func (*PNCounterRequestAction) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{7}
}

func (m *PNCounterRequestAction) GetAction() isPNCounterRequestAction_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *PNCounterRequestAction) GetGet() *Get {
	if x, ok := x.GetAction().(*PNCounterRequestAction_Get); ok {
		return x.Get
	}
	return nil
}

func (x *PNCounterRequestAction) GetDelete() *Delete {
	if x, ok := x.GetAction().(*PNCounterRequestAction_Delete); ok {
		return x.Delete
	}
	return nil
}

func (x *PNCounterRequestAction) GetIncrement() *PNCounterIncrement {
	if x, ok := x.GetAction().(*PNCounterRequestAction_Increment); ok {
		return x.Increment
	}
	return nil
}

func (x *PNCounterRequestAction) GetDecrement() *PNCounterDecrement {
	if x, ok := x.GetAction().(*PNCounterRequestAction_Decrement); ok {
		return x.Decrement
	}
	return nil
}

type isPNCounterRequestAction_Action interface {
	isPNCounterRequestAction_Action()
}

type PNCounterRequestAction_Get struct {
	Get *Get `protobuf:"bytes,1,opt,name=get,proto3,oneof"`
}

type PNCounterRequestAction_Delete struct {
	Delete *Delete `protobuf:"bytes,2,opt,name=delete,proto3,oneof"`
}

type PNCounterRequestAction_Increment struct {
	Increment *PNCounterIncrement `protobuf:"bytes,3,opt,name=increment,proto3,oneof"`
}

type PNCounterRequestAction_Decrement struct {
	Decrement *PNCounterDecrement `protobuf:"bytes,4,opt,name=decrement,proto3,oneof"`
}

func (*PNCounterRequestAction_Get) isPNCounterRequestAction_Action() {}

func (*PNCounterRequestAction_Delete) isPNCounterRequestAction_Action() {}

func (*PNCounterRequestAction_Increment) isPNCounterRequestAction_Action() {}

func (*PNCounterRequestAction_Decrement) isPNCounterRequestAction_Action() {}

type PNCounterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *PNCounterValue `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PNCounterResponse) Reset() {
	*x = PNCounterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PNCounterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PNCounterResponse) ProtoMessage() {}

func (x *PNCounterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PNCounterResponse.ProtoReflect.Descriptor instead.
func (*PNCounterResponse) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{8}
}

func (x *PNCounterResponse) GetValue() *PNCounterValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type GSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Actions []*GSetRequestAction `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *GSetRequest) Reset() {
	*x = GSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GSetRequest) ProtoMessage() {}

func (x *GSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GSetRequest.ProtoReflect.Descriptor instead.
func (*GSetRequest) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{9}
}

func (x *GSetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GSetRequest) GetActions() []*GSetRequestAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

type GSetRequestAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//	*GSetRequestAction_Get
	//	*GSetRequestAction_Delete
	//	*GSetRequestAction_Add
	Action isGSetRequestAction_Action `protobuf_oneof:"action"`
}

func (x *GSetRequestAction) Reset() {
	*x = GSetRequestAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GSetRequestAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GSetRequestAction) ProtoMessage() {}

func (x *GSetRequestAction) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GSetRequestAction.ProtoReflect.Descriptor instead.
func (*GSetRequestAction) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{10}
}

func (m *GSetRequestAction) GetAction() isGSetRequestAction_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *GSetRequestAction) GetGet() *Get {
	if x, ok := x.GetAction().(*GSetRequestAction_Get); ok {
		return x.Get
	}
	return nil
}

func (x *GSetRequestAction) GetDelete() *Delete {
	if x, ok := x.GetAction().(*GSetRequestAction_Delete); ok {
		return x.Delete
	}
	return nil
}

func (x *GSetRequestAction) GetAdd() *GSetAdd {
	if x, ok := x.GetAction().(*GSetRequestAction_Add); ok {
		return x.Add
	}
	return nil
}

type isGSetRequestAction_Action interface {
	isGSetRequestAction_Action()
}

type GSetRequestAction_Get struct {
	Get *Get `protobuf:"bytes,1,opt,name=get,proto3,oneof"`
}

type GSetRequestAction_Delete struct {
	Delete *Delete `protobuf:"bytes,2,opt,name=delete,proto3,oneof"`
}

type GSetRequestAction_Add struct {
	Add *GSetAdd `protobuf:"bytes,3,opt,name=add,proto3,oneof"`
}

func (*GSetRequestAction_Get) isGSetRequestAction_Action() {}

func (*GSetRequestAction_Delete) isGSetRequestAction_Action() {}

func (*GSetRequestAction_Add) isGSetRequestAction_Action() {}

type GSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *GSetValue `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GSetResponse) Reset() {
	*x = GSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GSetResponse) ProtoMessage() {}

func (x *GSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GSetResponse.ProtoReflect.Descriptor instead.
func (*GSetResponse) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{11}
}

func (x *GSetResponse) GetValue() *GSetValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type ORSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Actions []*ORSetRequestAction `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *ORSetRequest) Reset() {
	*x = ORSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ORSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ORSetRequest) ProtoMessage() {}

func (x *ORSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ORSetRequest.ProtoReflect.Descriptor instead.
func (*ORSetRequest) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{12}
}

func (x *ORSetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ORSetRequest) GetActions() []*ORSetRequestAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

type ORSetRequestAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//	*ORSetRequestAction_Get
	//	*ORSetRequestAction_Delete
	//	*ORSetRequestAction_Add
	//	*ORSetRequestAction_Remove
	Action isORSetRequestAction_Action `protobuf_oneof:"action"`
}

func (x *ORSetRequestAction) Reset() {
	*x = ORSetRequestAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ORSetRequestAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ORSetRequestAction) ProtoMessage() {}

func (x *ORSetRequestAction) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ORSetRequestAction.ProtoReflect.Descriptor instead.
func (*ORSetRequestAction) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{13}
}

func (m *ORSetRequestAction) GetAction() isORSetRequestAction_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *ORSetRequestAction) GetGet() *Get {
	if x, ok := x.GetAction().(*ORSetRequestAction_Get); ok {
		return x.Get
	}
	return nil
}

func (x *ORSetRequestAction) GetDelete() *Delete {
	if x, ok := x.GetAction().(*ORSetRequestAction_Delete); ok {
		return x.Delete
	}
	return nil
}

func (x *ORSetRequestAction) GetAdd() *ORSetAdd {
	if x, ok := x.GetAction().(*ORSetRequestAction_Add); ok {
		return x.Add
	}
	return nil
}

func (x *ORSetRequestAction) GetRemove() *ORSetRemove {
	if x, ok := x.GetAction().(*ORSetRequestAction_Remove); ok {
		return x.Remove
	}
	return nil
}

type isORSetRequestAction_Action interface {
	isORSetRequestAction_Action()
}

type ORSetRequestAction_Get struct {
	Get *Get `protobuf:"bytes,1,opt,name=get,proto3,oneof"`
}

type ORSetRequestAction_Delete struct {
	Delete *Delete `protobuf:"bytes,2,opt,name=delete,proto3,oneof"`
}

type ORSetRequestAction_Add struct {
	Add *ORSetAdd `protobuf:"bytes,3,opt,name=add,proto3,oneof"`
}

type ORSetRequestAction_Remove struct {
	Remove *ORSetRemove `protobuf:"bytes,4,opt,name=remove,proto3,oneof"`
}

func (*ORSetRequestAction_Get) isORSetRequestAction_Action() {}

func (*ORSetRequestAction_Delete) isORSetRequestAction_Action() {}

func (*ORSetRequestAction_Add) isORSetRequestAction_Action() {}

func (*ORSetRequestAction_Remove) isORSetRequestAction_Action() {}

type ORSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *ORSetValue `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ORSetResponse) Reset() {
	*x = ORSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ORSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ORSetResponse) ProtoMessage() {}

func (x *ORSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ORSetResponse.ProtoReflect.Descriptor instead.
func (*ORSetResponse) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{14}
}

func (x *ORSetResponse) GetValue() *ORSetValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type FlagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Actions []*FlagRequestAction `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *FlagRequest) Reset() {
	*x = FlagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagRequest) ProtoMessage() {}

func (x *FlagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagRequest.ProtoReflect.Descriptor instead.
func (*FlagRequest) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{15}
}

func (x *FlagRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FlagRequest) GetActions() []*FlagRequestAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

type FlagRequestAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//	*FlagRequestAction_Get
	//	*FlagRequestAction_Delete
	//	*FlagRequestAction_Enable
	Action isFlagRequestAction_Action `protobuf_oneof:"action"`
}

func (x *FlagRequestAction) Reset() {
	*x = FlagRequestAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlagRequestAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagRequestAction) ProtoMessage() {}

func (x *FlagRequestAction) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagRequestAction.ProtoReflect.Descriptor instead.
func (*FlagRequestAction) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{16}
}

func (m *FlagRequestAction) GetAction() isFlagRequestAction_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *FlagRequestAction) GetGet() *Get {
	if x, ok := x.GetAction().(*FlagRequestAction_Get); ok {
		return x.Get
	}
	return nil
}

func (x *FlagRequestAction) GetDelete() *Delete {
	if x, ok := x.GetAction().(*FlagRequestAction_Delete); ok {
		return x.Delete
	}
	return nil
}

func (x *FlagRequestAction) GetEnable() *FlagEnable {
	if x, ok := x.GetAction().(*FlagRequestAction_Enable); ok {
		return x.Enable
	}
	return nil
}

type isFlagRequestAction_Action interface {
	isFlagRequestAction_Action()
}

type FlagRequestAction_Get struct {
	Get *Get `protobuf:"bytes,1,opt,name=get,proto3,oneof"`
}

type FlagRequestAction_Delete struct {
	Delete *Delete `protobuf:"bytes,2,opt,name=delete,proto3,oneof"`
}

type FlagRequestAction_Enable struct {
	Enable *FlagEnable `protobuf:"bytes,3,opt,name=enable,proto3,oneof"`
}

func (*FlagRequestAction_Get) isFlagRequestAction_Action() {}

func (*FlagRequestAction_Delete) isFlagRequestAction_Action() {}

func (*FlagRequestAction_Enable) isFlagRequestAction_Action() {}

type FlagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *FlagValue `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *FlagResponse) Reset() {
	*x = FlagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagResponse) ProtoMessage() {}

func (x *FlagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagResponse.ProtoReflect.Descriptor instead.
func (*FlagResponse) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{17}
}

func (x *FlagResponse) GetValue() *FlagValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type LWWRegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Actions []*LWWRegisterRequestAction `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *LWWRegisterRequest) Reset() {
	*x = LWWRegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LWWRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LWWRegisterRequest) ProtoMessage() {}

func (x *LWWRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LWWRegisterRequest.ProtoReflect.Descriptor instead.
func (*LWWRegisterRequest) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{18}
}

func (x *LWWRegisterRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LWWRegisterRequest) GetActions() []*LWWRegisterRequestAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

type LWWRegisterRequestAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//	*LWWRegisterRequestAction_Get
	//	*LWWRegisterRequestAction_Delete
	//	*LWWRegisterRequestAction_Set
	//	*LWWRegisterRequestAction_SetWithClock
	Action isLWWRegisterRequestAction_Action `protobuf_oneof:"action"`
}

func (x *LWWRegisterRequestAction) Reset() {
	*x = LWWRegisterRequestAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LWWRegisterRequestAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LWWRegisterRequestAction) ProtoMessage() {}

func (x *LWWRegisterRequestAction) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LWWRegisterRequestAction.ProtoReflect.Descriptor instead.
func (*LWWRegisterRequestAction) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{19}
}

func (m *LWWRegisterRequestAction) GetAction() isLWWRegisterRequestAction_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *LWWRegisterRequestAction) GetGet() *Get {
	if x, ok := x.GetAction().(*LWWRegisterRequestAction_Get); ok {
		return x.Get
	}
	return nil
}

func (x *LWWRegisterRequestAction) GetDelete() *Delete {
	if x, ok := x.GetAction().(*LWWRegisterRequestAction_Delete); ok {
		return x.Delete
	}
	return nil
}

func (x *LWWRegisterRequestAction) GetSet() *LWWRegisterSet {
	if x, ok := x.GetAction().(*LWWRegisterRequestAction_Set); ok {
		return x.Set
	}
	return nil
}

func (x *LWWRegisterRequestAction) GetSetWithClock() *LWWRegisterSetWithClock {
	if x, ok := x.GetAction().(*LWWRegisterRequestAction_SetWithClock); ok {
		return x.SetWithClock
	}
	return nil
}

type isLWWRegisterRequestAction_Action interface {
	isLWWRegisterRequestAction_Action()
}

type LWWRegisterRequestAction_Get struct {
	Get *Get `protobuf:"bytes,1,opt,name=get,proto3,oneof"`
}

type LWWRegisterRequestAction_Delete struct {
	Delete *Delete `protobuf:"bytes,2,opt,name=delete,proto3,oneof"`
}

type LWWRegisterRequestAction_Set struct {
	Set *LWWRegisterSet `protobuf:"bytes,3,opt,name=set,proto3,oneof"`
}

type LWWRegisterRequestAction_SetWithClock struct {
	SetWithClock *LWWRegisterSetWithClock `protobuf:"bytes,4,opt,name=setWithClock,proto3,oneof"`
}

func (*LWWRegisterRequestAction_Get) isLWWRegisterRequestAction_Action() {}

func (*LWWRegisterRequestAction_Delete) isLWWRegisterRequestAction_Action() {}

func (*LWWRegisterRequestAction_Set) isLWWRegisterRequestAction_Action() {}

func (*LWWRegisterRequestAction_SetWithClock) isLWWRegisterRequestAction_Action() {}

type LWWRegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *LWWRegisterValue `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *LWWRegisterResponse) Reset() {
	*x = LWWRegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LWWRegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LWWRegisterResponse) ProtoMessage() {}

func (x *LWWRegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LWWRegisterResponse.ProtoReflect.Descriptor instead.
func (*LWWRegisterResponse) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{20}
}

func (x *LWWRegisterResponse) GetValue() *LWWRegisterValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type Get struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	FailWith string `protobuf:"bytes,2,opt,name=failWith,proto3" json:"failWith,omitempty"`
}

func (x *Get) Reset() {
	*x = Get{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Get) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Get) ProtoMessage() {}

func (x *Get) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Get.ProtoReflect.Descriptor instead.
func (*Get) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{21}
}

func (x *Get) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Get) GetFailWith() string {
	if x != nil {
		return x.FailWith
	}
	return ""
}

type Delete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	FailWith string `protobuf:"bytes,2,opt,name=failWith,proto3" json:"failWith,omitempty"`
}

func (x *Delete) Reset() {
	*x = Delete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Delete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Delete) ProtoMessage() {}

func (x *Delete) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Delete.ProtoReflect.Descriptor instead.
func (*Delete) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{22}
}

func (x *Delete) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Delete) GetFailWith() string {
	if x != nil {
		return x.FailWith
	}
	return ""
}

type AnySupportType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*AnySupportType_AnyValue
	//	*AnySupportType_StringValue
	//	*AnySupportType_BytesValue
	//	*AnySupportType_Int32Value
	//	*AnySupportType_Int64Value
	//	*AnySupportType_FloatValue
	//	*AnySupportType_DoubleValue
	//	*AnySupportType_BoolValue
	Value isAnySupportType_Value `protobuf_oneof:"value"`
}

func (x *AnySupportType) Reset() {
	*x = AnySupportType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnySupportType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnySupportType) ProtoMessage() {}

func (x *AnySupportType) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnySupportType.ProtoReflect.Descriptor instead.
func (*AnySupportType) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{23}
}

func (m *AnySupportType) GetValue() isAnySupportType_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *AnySupportType) GetAnyValue() *any.Any {
	if x, ok := x.GetValue().(*AnySupportType_AnyValue); ok {
		return x.AnyValue
	}
	return nil
}

func (x *AnySupportType) GetStringValue() string {
	if x, ok := x.GetValue().(*AnySupportType_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *AnySupportType) GetBytesValue() []byte {
	if x, ok := x.GetValue().(*AnySupportType_BytesValue); ok {
		return x.BytesValue
	}
	return nil
}

func (x *AnySupportType) GetInt32Value() int32 {
	if x, ok := x.GetValue().(*AnySupportType_Int32Value); ok {
		return x.Int32Value
	}
	return 0
}

func (x *AnySupportType) GetInt64Value() int64 {
	if x, ok := x.GetValue().(*AnySupportType_Int64Value); ok {
		return x.Int64Value
	}
	return 0
}

func (x *AnySupportType) GetFloatValue() float32 {
	if x, ok := x.GetValue().(*AnySupportType_FloatValue); ok {
		return x.FloatValue
	}
	return 0
}

func (x *AnySupportType) GetDoubleValue() float64 {
	if x, ok := x.GetValue().(*AnySupportType_DoubleValue); ok {
		return x.DoubleValue
	}
	return 0
}

func (x *AnySupportType) GetBoolValue() bool {
	if x, ok := x.GetValue().(*AnySupportType_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

type isAnySupportType_Value interface {
	isAnySupportType_Value()
}

type AnySupportType_AnyValue struct {
	AnyValue *any.Any `protobuf:"bytes,3,opt,name=any_value,json=anyValue,proto3,oneof"`
}

type AnySupportType_StringValue struct {
	StringValue string `protobuf:"bytes,4,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type AnySupportType_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,5,opt,name=bytes_value,json=bytesValue,proto3,oneof"`
}

type AnySupportType_Int32Value struct {
	Int32Value int32 `protobuf:"varint,6,opt,name=int32_value,json=int32Value,proto3,oneof"`
}

type AnySupportType_Int64Value struct {
	Int64Value int64 `protobuf:"varint,7,opt,name=int64_value,json=int64Value,proto3,oneof"`
}

type AnySupportType_FloatValue struct {
	FloatValue float32 `protobuf:"fixed32,8,opt,name=float_value,json=floatValue,proto3,oneof"`
}

type AnySupportType_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,9,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type AnySupportType_BoolValue struct {
	BoolValue bool `protobuf:"varint,10,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

func (*AnySupportType_AnyValue) isAnySupportType_Value() {}

func (*AnySupportType_StringValue) isAnySupportType_Value() {}

func (*AnySupportType_BytesValue) isAnySupportType_Value() {}

func (*AnySupportType_Int32Value) isAnySupportType_Value() {}

func (*AnySupportType_Int64Value) isAnySupportType_Value() {}

func (*AnySupportType_FloatValue) isAnySupportType_Value() {}

func (*AnySupportType_DoubleValue) isAnySupportType_Value() {}

func (*AnySupportType_BoolValue) isAnySupportType_Value() {}

type GCounterIncrement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	FailWith string `protobuf:"bytes,2,opt,name=failWith,proto3" json:"failWith,omitempty"`
	Value    uint64 `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GCounterIncrement) Reset() {
	*x = GCounterIncrement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCounterIncrement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCounterIncrement) ProtoMessage() {}

func (x *GCounterIncrement) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCounterIncrement.ProtoReflect.Descriptor instead.
func (*GCounterIncrement) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{24}
}

func (x *GCounterIncrement) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GCounterIncrement) GetFailWith() string {
	if x != nil {
		return x.FailWith
	}
	return ""
}

func (x *GCounterIncrement) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type GCounterValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value uint64 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GCounterValue) Reset() {
	*x = GCounterValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCounterValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCounterValue) ProtoMessage() {}

func (x *GCounterValue) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCounterValue.ProtoReflect.Descriptor instead.
func (*GCounterValue) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{25}
}

func (x *GCounterValue) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type PNCounterIncrement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	FailWith string `protobuf:"bytes,2,opt,name=failWith,proto3" json:"failWith,omitempty"`
	Value    int64  `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PNCounterIncrement) Reset() {
	*x = PNCounterIncrement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PNCounterIncrement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PNCounterIncrement) ProtoMessage() {}

func (x *PNCounterIncrement) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PNCounterIncrement.ProtoReflect.Descriptor instead.
func (*PNCounterIncrement) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{26}
}

func (x *PNCounterIncrement) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PNCounterIncrement) GetFailWith() string {
	if x != nil {
		return x.FailWith
	}
	return ""
}

func (x *PNCounterIncrement) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type PNCounterDecrement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	FailWith string `protobuf:"bytes,2,opt,name=failWith,proto3" json:"failWith,omitempty"`
	Value    int64  `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PNCounterDecrement) Reset() {
	*x = PNCounterDecrement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PNCounterDecrement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PNCounterDecrement) ProtoMessage() {}

func (x *PNCounterDecrement) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PNCounterDecrement.ProtoReflect.Descriptor instead.
func (*PNCounterDecrement) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{27}
}

func (x *PNCounterDecrement) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PNCounterDecrement) GetFailWith() string {
	if x != nil {
		return x.FailWith
	}
	return ""
}

func (x *PNCounterDecrement) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type PNCounterValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PNCounterValue) Reset() {
	*x = PNCounterValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PNCounterValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PNCounterValue) ProtoMessage() {}

func (x *PNCounterValue) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PNCounterValue.ProtoReflect.Descriptor instead.
func (*PNCounterValue) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{28}
}

func (x *PNCounterValue) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type GSetAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string          `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	FailWith string          `protobuf:"bytes,2,opt,name=failWith,proto3" json:"failWith,omitempty"`
	Value    *AnySupportType `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GSetAdd) Reset() {
	*x = GSetAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GSetAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GSetAdd) ProtoMessage() {}

func (x *GSetAdd) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GSetAdd.ProtoReflect.Descriptor instead.
func (*GSetAdd) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{29}
}

func (x *GSetAdd) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GSetAdd) GetFailWith() string {
	if x != nil {
		return x.FailWith
	}
	return ""
}

func (x *GSetAdd) GetValue() *AnySupportType {
	if x != nil {
		return x.Value
	}
	return nil
}

type GSetValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*AnySupportType `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *GSetValue) Reset() {
	*x = GSetValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GSetValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GSetValue) ProtoMessage() {}

func (x *GSetValue) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GSetValue.ProtoReflect.Descriptor instead.
func (*GSetValue) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{30}
}

func (x *GSetValue) GetValues() []*AnySupportType {
	if x != nil {
		return x.Values
	}
	return nil
}

type GSetValueAnySupport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*AnySupportType `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *GSetValueAnySupport) Reset() {
	*x = GSetValueAnySupport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GSetValueAnySupport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GSetValueAnySupport) ProtoMessage() {}

func (x *GSetValueAnySupport) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GSetValueAnySupport.ProtoReflect.Descriptor instead.
func (*GSetValueAnySupport) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{31}
}

func (x *GSetValueAnySupport) GetValues() []*AnySupportType {
	if x != nil {
		return x.Values
	}
	return nil
}

type GSetSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"zigzag64,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GSetSize) Reset() {
	*x = GSetSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GSetSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GSetSize) ProtoMessage() {}

func (x *GSetSize) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GSetSize.ProtoReflect.Descriptor instead.
func (*GSetSize) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{32}
}

func (x *GSetSize) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ORSetAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string          `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	FailWith string          `protobuf:"bytes,2,opt,name=failWith,proto3" json:"failWith,omitempty"`
	Value    *AnySupportType `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ORSetAdd) Reset() {
	*x = ORSetAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ORSetAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ORSetAdd) ProtoMessage() {}

func (x *ORSetAdd) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ORSetAdd.ProtoReflect.Descriptor instead.
func (*ORSetAdd) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{33}
}

func (x *ORSetAdd) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ORSetAdd) GetFailWith() string {
	if x != nil {
		return x.FailWith
	}
	return ""
}

func (x *ORSetAdd) GetValue() *AnySupportType {
	if x != nil {
		return x.Value
	}
	return nil
}

type ORSetRemove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string          `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	FailWith string          `protobuf:"bytes,2,opt,name=failWith,proto3" json:"failWith,omitempty"`
	Value    *AnySupportType `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ORSetRemove) Reset() {
	*x = ORSetRemove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ORSetRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ORSetRemove) ProtoMessage() {}

func (x *ORSetRemove) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ORSetRemove.ProtoReflect.Descriptor instead.
func (*ORSetRemove) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{34}
}

func (x *ORSetRemove) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ORSetRemove) GetFailWith() string {
	if x != nil {
		return x.FailWith
	}
	return ""
}

func (x *ORSetRemove) GetValue() *AnySupportType {
	if x != nil {
		return x.Value
	}
	return nil
}

type ORSetValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*any.Any `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *ORSetValue) Reset() {
	*x = ORSetValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ORSetValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ORSetValue) ProtoMessage() {}

func (x *ORSetValue) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ORSetValue.ProtoReflect.Descriptor instead.
func (*ORSetValue) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{35}
}

func (x *ORSetValue) GetValues() []*any.Any {
	if x != nil {
		return x.Values
	}
	return nil
}

type ORSetSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"zigzag64,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ORSetSize) Reset() {
	*x = ORSetSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ORSetSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ORSetSize) ProtoMessage() {}

func (x *ORSetSize) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ORSetSize.ProtoReflect.Descriptor instead.
func (*ORSetSize) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{36}
}

func (x *ORSetSize) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type FlagEnable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	FailWith string `protobuf:"bytes,2,opt,name=failWith,proto3" json:"failWith,omitempty"`
}

func (x *FlagEnable) Reset() {
	*x = FlagEnable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlagEnable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagEnable) ProtoMessage() {}

func (x *FlagEnable) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagEnable.ProtoReflect.Descriptor instead.
func (*FlagEnable) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{37}
}

func (x *FlagEnable) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *FlagEnable) GetFailWith() string {
	if x != nil {
		return x.FailWith
	}
	return ""
}

type FlagValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *FlagValue) Reset() {
	*x = FlagValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlagValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagValue) ProtoMessage() {}

func (x *FlagValue) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagValue.ProtoReflect.Descriptor instead.
func (*FlagValue) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{38}
}

func (x *FlagValue) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type LWWRegisterSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string          `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	FailWith string          `protobuf:"bytes,2,opt,name=failWith,proto3" json:"failWith,omitempty"`
	Value    *AnySupportType `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *LWWRegisterSet) Reset() {
	*x = LWWRegisterSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LWWRegisterSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LWWRegisterSet) ProtoMessage() {}

func (x *LWWRegisterSet) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LWWRegisterSet.ProtoReflect.Descriptor instead.
func (*LWWRegisterSet) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{39}
}

func (x *LWWRegisterSet) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *LWWRegisterSet) GetFailWith() string {
	if x != nil {
		return x.FailWith
	}
	return ""
}

func (x *LWWRegisterSet) GetValue() *AnySupportType {
	if x != nil {
		return x.Value
	}
	return nil
}

type LWWRegisterSetWithClock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key              string          `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	FailWith         string          `protobuf:"bytes,2,opt,name=failWith,proto3" json:"failWith,omitempty"`
	Value            *AnySupportType `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Clock            CrdtClock       `protobuf:"varint,4,opt,name=clock,proto3,enum=crdt.CrdtClock" json:"clock,omitempty"`
	CustomClockValue int64           `protobuf:"varint,5,opt,name=custom_clock_value,json=customClockValue,proto3" json:"custom_clock_value,omitempty"`
}

func (x *LWWRegisterSetWithClock) Reset() {
	*x = LWWRegisterSetWithClock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LWWRegisterSetWithClock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LWWRegisterSetWithClock) ProtoMessage() {}

func (x *LWWRegisterSetWithClock) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LWWRegisterSetWithClock.ProtoReflect.Descriptor instead.
func (*LWWRegisterSetWithClock) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{40}
}

func (x *LWWRegisterSetWithClock) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *LWWRegisterSetWithClock) GetFailWith() string {
	if x != nil {
		return x.FailWith
	}
	return ""
}

func (x *LWWRegisterSetWithClock) GetValue() *AnySupportType {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *LWWRegisterSetWithClock) GetClock() CrdtClock {
	if x != nil {
		return x.Clock
	}
	return CrdtClock_DEFAULT
}

func (x *LWWRegisterSetWithClock) GetCustomClockValue() int64 {
	if x != nil {
		return x.CustomClockValue
	}
	return 0
}

type LWWRegisterValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *any.Any `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *LWWRegisterValue) Reset() {
	*x = LWWRegisterValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LWWRegisterValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LWWRegisterValue) ProtoMessage() {}

func (x *LWWRegisterValue) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LWWRegisterValue.ProtoReflect.Descriptor instead.
func (*LWWRegisterValue) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{41}
}

func (x *LWWRegisterValue) GetValue() *any.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

type ORMapSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	FailWith string   `protobuf:"bytes,2,opt,name=failWith,proto3" json:"failWith,omitempty"`
	EntryKey *any.Any `protobuf:"bytes,3,opt,name=entry_key,json=entryKey,proto3" json:"entry_key,omitempty"`
	Value    *any.Any `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ORMapSet) Reset() {
	*x = ORMapSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ORMapSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ORMapSet) ProtoMessage() {}

func (x *ORMapSet) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ORMapSet.ProtoReflect.Descriptor instead.
func (*ORMapSet) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{42}
}

func (x *ORMapSet) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ORMapSet) GetFailWith() string {
	if x != nil {
		return x.FailWith
	}
	return ""
}

func (x *ORMapSet) GetEntryKey() *any.Any {
	if x != nil {
		return x.EntryKey
	}
	return nil
}

func (x *ORMapSet) GetValue() *any.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

type ORMapKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	FailWith string   `protobuf:"bytes,2,opt,name=failWith,proto3" json:"failWith,omitempty"`
	Value    *any.Any `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ORMapKey) Reset() {
	*x = ORMapKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ORMapKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ORMapKey) ProtoMessage() {}

func (x *ORMapKey) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ORMapKey.ProtoReflect.Descriptor instead.
func (*ORMapKey) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{43}
}

func (x *ORMapKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ORMapKey) GetFailWith() string {
	if x != nil {
		return x.FailWith
	}
	return ""
}

func (x *ORMapKey) GetValue() *any.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

type ORMapEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntryKey *any.Any `protobuf:"bytes,1,opt,name=entry_key,json=entryKey,proto3" json:"entry_key,omitempty"`
	Value    *any.Any `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ORMapEntry) Reset() {
	*x = ORMapEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ORMapEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ORMapEntry) ProtoMessage() {}

func (x *ORMapEntry) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ORMapEntry.ProtoReflect.Descriptor instead.
func (*ORMapEntry) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{44}
}

func (x *ORMapEntry) GetEntryKey() *any.Any {
	if x != nil {
		return x.EntryKey
	}
	return nil
}

func (x *ORMapEntry) GetValue() *any.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

type ORMapEntries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*ORMapEntry `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *ORMapEntries) Reset() {
	*x = ORMapEntries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ORMapEntries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ORMapEntries) ProtoMessage() {}

func (x *ORMapEntries) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ORMapEntries.ProtoReflect.Descriptor instead.
func (*ORMapEntries) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{45}
}

func (x *ORMapEntries) GetValues() []*ORMapEntry {
	if x != nil {
		return x.Values
	}
	return nil
}

type ORMapSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"zigzag64,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ORMapSize) Reset() {
	*x = ORMapSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ORMapSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ORMapSize) ProtoMessage() {}

func (x *ORMapSize) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ORMapSize.ProtoReflect.Descriptor instead.
func (*ORMapSize) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{46}
}

func (x *ORMapSize) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ORMapKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*any.Any `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *ORMapKeys) Reset() {
	*x = ORMapKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ORMapKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ORMapKeys) ProtoMessage() {}

func (x *ORMapKeys) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ORMapKeys.ProtoReflect.Descriptor instead.
func (*ORMapKeys) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{47}
}

func (x *ORMapKeys) GetValues() []*any.Any {
	if x != nil {
		return x.Values
	}
	return nil
}

type VoteVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	FailWith string `protobuf:"bytes,2,opt,name=failWith,proto3" json:"failWith,omitempty"`
	Value    bool   `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *VoteVote) Reset() {
	*x = VoteVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteVote) ProtoMessage() {}

func (x *VoteVote) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteVote.ProtoReflect.Descriptor instead.
func (*VoteVote) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{48}
}

func (x *VoteVote) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *VoteVote) GetFailWith() string {
	if x != nil {
		return x.FailWith
	}
	return ""
}

func (x *VoteVote) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type SelfVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SelfVote) Reset() {
	*x = SelfVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelfVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelfVote) ProtoMessage() {}

func (x *SelfVote) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelfVote.ProtoReflect.Descriptor instead.
func (*SelfVote) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{49}
}

func (x *SelfVote) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type Voters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value uint32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Voters) Reset() {
	*x = Voters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tck_crdt_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Voters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Voters) ProtoMessage() {}

func (x *Voters) ProtoReflect() protoreflect.Message {
	mi := &file_tck_crdt_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Voters.ProtoReflect.Descriptor instead.
func (*Voters) Descriptor() ([]byte, []int) {
	return file_tck_crdt_proto_rawDescGZIP(), []int{50}
}

func (x *Voters) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

var File_tck_crdt_proto protoreflect.FileDescriptor

var file_tck_crdt_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x74, 0x63, 0x6b, 0x5f, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x04, 0x63, 0x72, 0x64, 0x74, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x6b, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x56, 0x0a, 0x0b, 0x56,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x31, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x11, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x03, 0x67, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x48, 0x00, 0x52, 0x03, 0x67, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x24, 0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x48, 0x00,
	0x52, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x5e, 0x0a, 0x0c, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x66, 0x56, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x66, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x76, 0x6f,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x46, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x46, 0x6f, 0x72,
	0x22, 0x5e, 0x0a, 0x0f, 0x47, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x04, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x07, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x72, 0x64,
	0x74, 0x2e, 0x47, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0xa1, 0x01, 0x0a, 0x15, 0x47, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x03, 0x67, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x48, 0x00, 0x52, 0x03, 0x67, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x72, 0x64, 0x74,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x37, 0x0a, 0x09, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x47, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x09, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3d, 0x0a, 0x10, 0x47, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x47,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x60, 0x0a, 0x10, 0x50, 0x4e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x04, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a,
	0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x50, 0x4e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xdd, 0x01, 0x0a, 0x16, 0x50, 0x4e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x63, 0x72, 0x64, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x00, 0x52, 0x03, 0x67, 0x65, 0x74, 0x12,
	0x26, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x00, 0x52,
	0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x69, 0x6e, 0x63, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x72, 0x64,
	0x74, 0x2e, 0x50, 0x4e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x50, 0x4e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x44, 0x65, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x09, 0x64, 0x65, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x11, 0x50, 0x4e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x72, 0x64, 0x74,
	0x2e, 0x50, 0x4e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x56, 0x0a, 0x0b, 0x47, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x04, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63,
	0x72, 0x64, 0x74, 0x2e, 0x47, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x87,
	0x01, 0x0a, 0x11, 0x47, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x00, 0x52, 0x03,
	0x67, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x61,
	0x64, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e,
	0x47, 0x53, 0x65, 0x74, 0x41, 0x64, 0x64, 0x48, 0x00, 0x52, 0x03, 0x61, 0x64, 0x64, 0x42, 0x08,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x35, 0x0a, 0x0c, 0x47, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x47,
	0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x58, 0x0a, 0x0c, 0x4f, 0x52, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x90, 0xb5, 0x18,
	0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x4f, 0x52,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x12, 0x4f, 0x52,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x63, 0x72, 0x64, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x00, 0x52, 0x03, 0x67, 0x65, 0x74, 0x12,
	0x26, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x00, 0x52,
	0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x03, 0x61, 0x64, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x4f, 0x52, 0x53, 0x65,
	0x74, 0x41, 0x64, 0x64, 0x48, 0x00, 0x52, 0x03, 0x61, 0x64, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x72,
	0x64, 0x74, 0x2e, 0x4f, 0x52, 0x53, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x00,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x37, 0x0a, 0x0d, 0x4f, 0x52, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x4f, 0x52, 0x53, 0x65, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x56, 0x0a, 0x0b, 0x46,
	0x6c, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x31, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x11, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x03, 0x67, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x48, 0x00, 0x52, 0x03, 0x67, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x2a, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x48, 0x00, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x08, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x35, 0x0a, 0x0c, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x46, 0x6c, 0x61,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x64, 0x0a,
	0x12, 0x4c, 0x57, 0x57, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x04, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x07, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x72, 0x64,
	0x74, 0x2e, 0x4c, 0x57, 0x57, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0xda, 0x01, 0x0a, 0x18, 0x4c, 0x57, 0x57, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x63, 0x72, 0x64, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x00, 0x52, 0x03, 0x67, 0x65, 0x74, 0x12,
	0x26, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x00, 0x52,
	0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x4c, 0x57, 0x57, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x03, 0x73, 0x65,
	0x74, 0x12, 0x43, 0x0a, 0x0c, 0x73, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x4c,
	0x57, 0x57, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x65, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x43, 0x0a, 0x13, 0x4c, 0x57, 0x57, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x4c, 0x57,
	0x57, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x90, 0xb5, 0x18, 0x01, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x57, 0x69, 0x74, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x57, 0x69, 0x74, 0x68,
	0x22, 0x3c, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x22, 0xc5,
	0x02, 0x0a, 0x0e, 0x41, 0x6e, 0x79, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x33, 0x0a, 0x09, 0x61, 0x6e, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x08, 0x61, 0x6e,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x48, 0x00, 0x52, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21,
	0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x21, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x6c, 0x6f,
	0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x64, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52,
	0x0b, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0a,
	0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5d, 0x0a, 0x11, 0x47, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x25, 0x0a, 0x0d, 0x47, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5e, 0x0a, 0x12,
	0x50, 0x4e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x04, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61,
	0x69, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61,
	0x69, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5e, 0x0a, 0x12,
	0x50, 0x4e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x44, 0x65, 0x63, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x04, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61,
	0x69, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61,
	0x69, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x26, 0x0a, 0x0e,
	0x50, 0x4e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x69, 0x0a, 0x07, 0x47, 0x53, 0x65, 0x74, 0x41, 0x64, 0x64, 0x12,
	0x16, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x90, 0xb5,
	0x18, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x57,
	0x69, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x57,
	0x69, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x41, 0x6e, 0x79, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x39, 0x0a, 0x09, 0x47, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2c, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63,
	0x72, 0x64, 0x74, 0x2e, 0x41, 0x6e, 0x79, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x43, 0x0a, 0x13, 0x47, 0x53,
	0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x6e, 0x79, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x2c, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x41, 0x6e, 0x79, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22,
	0x20, 0x0a, 0x08, 0x47, 0x53, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x6a, 0x0a, 0x08, 0x4f, 0x52, 0x53, 0x65, 0x74, 0x41, 0x64, 0x64, 0x12, 0x16, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x90, 0xb5, 0x18, 0x01,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x57, 0x69, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x57, 0x69, 0x74,
	0x68, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x41, 0x6e, 0x79, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x6d, 0x0a,
	0x0b, 0x4f, 0x52, 0x53, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x90, 0xb5, 0x18, 0x01, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x57, 0x69, 0x74, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x57, 0x69, 0x74, 0x68,
	0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x41, 0x6e, 0x79, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x0a,
	0x4f, 0x52, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x21, 0x0a, 0x09, 0x4f, 0x52, 0x53, 0x65,
	0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x40, 0x0a, 0x0a, 0x46,
	0x6c, 0x61, 0x67, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x22, 0x21, 0x0a,
	0x09, 0x46, 0x6c, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x70, 0x0a, 0x0e, 0x4c, 0x57, 0x57, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x12, 0x16, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x04, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61,
	0x69, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61,
	0x69, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x41, 0x6e, 0x79,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xce, 0x01, 0x0a, 0x17, 0x4c, 0x57, 0x57, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x16,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x90, 0xb5, 0x18,
	0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x57, 0x69,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x57, 0x69,
	0x74, 0x68, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x41, 0x6e, 0x79, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25,
	0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x63, 0x72, 0x64, 0x74, 0x2e, 0x43, 0x72, 0x64, 0x74, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05,
	0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f,
	0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x3e, 0x0a, 0x10, 0x4c, 0x57, 0x57, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x08, 0x4f, 0x52, 0x4d, 0x61, 0x70, 0x53, 0x65, 0x74,
	0x12, 0x16, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x90,
	0xb5, 0x18, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x69, 0x6c,
	0x57, 0x69, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x69, 0x6c,
	0x57, 0x69, 0x74, 0x68, 0x12, 0x31, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x6a, 0x0a, 0x08, 0x4f, 0x52, 0x4d, 0x61, 0x70, 0x4b, 0x65, 0x79, 0x12,
	0x16, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x90, 0xb5,
	0x18, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x57,
	0x69, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x57,
	0x69, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x6b, 0x0a, 0x0a, 0x4f, 0x52, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x31, 0x0a,
	0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x4b, 0x65, 0x79,
	0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x0c,
	0x4f, 0x52, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63,
	0x72, 0x64, 0x74, 0x2e, 0x4f, 0x52, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x21, 0x0a, 0x09, 0x4f, 0x52, 0x4d, 0x61, 0x70, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x09, 0x4f, 0x52, 0x4d,
	0x61, 0x70, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x22, 0x54, 0x0a, 0x08, 0x56, 0x6f, 0x74, 0x65, 0x56, 0x6f, 0x74, 0x65,
	0x12, 0x16, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x90,
	0xb5, 0x18, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x69, 0x6c,
	0x57, 0x69, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x69, 0x6c,
	0x57, 0x69, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x20, 0x0a, 0x08, 0x53, 0x65,
	0x6c, 0x66, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1e, 0x0a, 0x06,
	0x56, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2a, 0x4c, 0x0a, 0x09,
	0x43, 0x72, 0x64, 0x74, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46,
	0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x56, 0x45, 0x52, 0x53,
	0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x02, 0x12,
	0x19, 0x0a, 0x15, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x41, 0x55, 0x54, 0x4f, 0x5f, 0x49,
	0x4e, 0x43, 0x52, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x32, 0xd5, 0x05, 0x0a, 0x07, 0x54,
	0x63, 0x6b, 0x43, 0x72, 0x64, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x47, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x63, 0x72, 0x64, 0x74,
	0x2e, 0x47, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x47, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x50, 0x4e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x63,
	0x72, 0x64, 0x74, 0x2e, 0x50, 0x4e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x50, 0x4e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a,
	0x0b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x47, 0x53, 0x65, 0x74, 0x12, 0x11, 0x2e, 0x63,
	0x72, 0x64, 0x74, 0x2e, 0x47, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x47, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4f, 0x52,
	0x53, 0x65, 0x74, 0x12, 0x12, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x4f, 0x52, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x4f,
	0x52, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0b,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x11, 0x2e, 0x63, 0x72,
	0x64, 0x74, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x49, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x57, 0x57,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e,
	0x4c, 0x57, 0x57, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x4c, 0x57, 0x57, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a,
	0x0b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x63,
	0x72, 0x64, 0x74, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x4f, 0x52, 0x4d, 0x61, 0x70, 0x12,
	0x0e, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x4f, 0x52, 0x4d, 0x61, 0x70, 0x53, 0x65, 0x74, 0x1a,
	0x12, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x4f, 0x52, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x52, 0x4d,
	0x61, 0x70, 0x12, 0x0e, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x4f, 0x52, 0x4d, 0x61, 0x70, 0x4b,
	0x65, 0x79, 0x1a, 0x12, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x4f, 0x52, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x4f,
	0x52, 0x4d, 0x61, 0x70, 0x12, 0x0e, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x4f, 0x52, 0x4d, 0x61,
	0x70, 0x4b, 0x65, 0x79, 0x1a, 0x12, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x4f, 0x52, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f,
	0x52, 0x4d, 0x61, 0x70, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x09, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x1a, 0x0f, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x4f, 0x52, 0x4d, 0x61, 0x70,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x30, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x52, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x09, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x1a, 0x12, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x4f, 0x52, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f, 0x52, 0x4d,
	0x61, 0x70, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x09, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x1a, 0x0f, 0x2e, 0x63, 0x72, 0x64, 0x74, 0x2e, 0x4f, 0x52, 0x4d, 0x61, 0x70, 0x4b, 0x65,
	0x79, 0x73, 0x42, 0x51, 0x0a, 0x17, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x74, 0x63, 0x6b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5a, 0x36, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x69, 0x6f, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x2f, 0x74, 0x63, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x72, 0x64, 0x74,
	0x3b, 0x63, 0x72, 0x64, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tck_crdt_proto_rawDescOnce sync.Once
	file_tck_crdt_proto_rawDescData = file_tck_crdt_proto_rawDesc
)

func file_tck_crdt_proto_rawDescGZIP() []byte {
	file_tck_crdt_proto_rawDescOnce.Do(func() {
		file_tck_crdt_proto_rawDescData = protoimpl.X.CompressGZIP(file_tck_crdt_proto_rawDescData)
	})
	return file_tck_crdt_proto_rawDescData
}

var file_tck_crdt_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tck_crdt_proto_msgTypes = make([]protoimpl.MessageInfo, 51)
var file_tck_crdt_proto_goTypes = []interface{}{
	(CrdtClock)(0),                   // 0: crdt.CrdtClock
	(*VoteRequest)(nil),              // 1: crdt.VoteRequest
	(*VoteRequestAction)(nil),        // 2: crdt.VoteRequestAction
	(*VoteResponse)(nil),             // 3: crdt.VoteResponse
	(*GCounterRequest)(nil),          // 4: crdt.GCounterRequest
	(*GCounterRequestAction)(nil),    // 5: crdt.GCounterRequestAction
	(*GCounterResponse)(nil),         // 6: crdt.GCounterResponse
	(*PNCounterRequest)(nil),         // 7: crdt.PNCounterRequest
	(*PNCounterRequestAction)(nil),   // 8: crdt.PNCounterRequestAction
	(*PNCounterResponse)(nil),        // 9: crdt.PNCounterResponse
	(*GSetRequest)(nil),              // 10: crdt.GSetRequest
	(*GSetRequestAction)(nil),        // 11: crdt.GSetRequestAction
	(*GSetResponse)(nil),             // 12: crdt.GSetResponse
	(*ORSetRequest)(nil),             // 13: crdt.ORSetRequest
	(*ORSetRequestAction)(nil),       // 14: crdt.ORSetRequestAction
	(*ORSetResponse)(nil),            // 15: crdt.ORSetResponse
	(*FlagRequest)(nil),              // 16: crdt.FlagRequest
	(*FlagRequestAction)(nil),        // 17: crdt.FlagRequestAction
	(*FlagResponse)(nil),             // 18: crdt.FlagResponse
	(*LWWRegisterRequest)(nil),       // 19: crdt.LWWRegisterRequest
	(*LWWRegisterRequestAction)(nil), // 20: crdt.LWWRegisterRequestAction
	(*LWWRegisterResponse)(nil),      // 21: crdt.LWWRegisterResponse
	(*Get)(nil),                      // 22: crdt.Get
	(*Delete)(nil),                   // 23: crdt.Delete
	(*AnySupportType)(nil),           // 24: crdt.AnySupportType
	(*GCounterIncrement)(nil),        // 25: crdt.GCounterIncrement
	(*GCounterValue)(nil),            // 26: crdt.GCounterValue
	(*PNCounterIncrement)(nil),       // 27: crdt.PNCounterIncrement
	(*PNCounterDecrement)(nil),       // 28: crdt.PNCounterDecrement
	(*PNCounterValue)(nil),           // 29: crdt.PNCounterValue
	(*GSetAdd)(nil),                  // 30: crdt.GSetAdd
	(*GSetValue)(nil),                // 31: crdt.GSetValue
	(*GSetValueAnySupport)(nil),      // 32: crdt.GSetValueAnySupport
	(*GSetSize)(nil),                 // 33: crdt.GSetSize
	(*ORSetAdd)(nil),                 // 34: crdt.ORSetAdd
	(*ORSetRemove)(nil),              // 35: crdt.ORSetRemove
	(*ORSetValue)(nil),               // 36: crdt.ORSetValue
	(*ORSetSize)(nil),                // 37: crdt.ORSetSize
	(*FlagEnable)(nil),               // 38: crdt.FlagEnable
	(*FlagValue)(nil),                // 39: crdt.FlagValue
	(*LWWRegisterSet)(nil),           // 40: crdt.LWWRegisterSet
	(*LWWRegisterSetWithClock)(nil),  // 41: crdt.LWWRegisterSetWithClock
	(*LWWRegisterValue)(nil),         // 42: crdt.LWWRegisterValue
	(*ORMapSet)(nil),                 // 43: crdt.ORMapSet
	(*ORMapKey)(nil),                 // 44: crdt.ORMapKey
	(*ORMapEntry)(nil),               // 45: crdt.ORMapEntry
	(*ORMapEntries)(nil),             // 46: crdt.ORMapEntries
	(*ORMapSize)(nil),                // 47: crdt.ORMapSize
	(*ORMapKeys)(nil),                // 48: crdt.ORMapKeys
	(*VoteVote)(nil),                 // 49: crdt.VoteVote
	(*SelfVote)(nil),                 // 50: crdt.SelfVote
	(*Voters)(nil),                   // 51: crdt.Voters
	(*any.Any)(nil),                  // 52: google.protobuf.Any
}
var file_tck_crdt_proto_depIdxs = []int32{
	2,  // 0: crdt.VoteRequest.actions:type_name -> crdt.VoteRequestAction
	22, // 1: crdt.VoteRequestAction.get:type_name -> crdt.Get
	23, // 2: crdt.VoteRequestAction.delete:type_name -> crdt.Delete
	49, // 3: crdt.VoteRequestAction.vote:type_name -> crdt.VoteVote
	5,  // 4: crdt.GCounterRequest.actions:type_name -> crdt.GCounterRequestAction
	22, // 5: crdt.GCounterRequestAction.get:type_name -> crdt.Get
	23, // 6: crdt.GCounterRequestAction.delete:type_name -> crdt.Delete
	25, // 7: crdt.GCounterRequestAction.increment:type_name -> crdt.GCounterIncrement
	26, // 8: crdt.GCounterResponse.value:type_name -> crdt.GCounterValue
	8,  // 9: crdt.PNCounterRequest.actions:type_name -> crdt.PNCounterRequestAction
	22, // 10: crdt.PNCounterRequestAction.get:type_name -> crdt.Get
	23, // 11: crdt.PNCounterRequestAction.delete:type_name -> crdt.Delete
	27, // 12: crdt.PNCounterRequestAction.increment:type_name -> crdt.PNCounterIncrement
	28, // 13: crdt.PNCounterRequestAction.decrement:type_name -> crdt.PNCounterDecrement
	29, // 14: crdt.PNCounterResponse.value:type_name -> crdt.PNCounterValue
	11, // 15: crdt.GSetRequest.actions:type_name -> crdt.GSetRequestAction
	22, // 16: crdt.GSetRequestAction.get:type_name -> crdt.Get
	23, // 17: crdt.GSetRequestAction.delete:type_name -> crdt.Delete
	30, // 18: crdt.GSetRequestAction.add:type_name -> crdt.GSetAdd
	31, // 19: crdt.GSetResponse.value:type_name -> crdt.GSetValue
	14, // 20: crdt.ORSetRequest.actions:type_name -> crdt.ORSetRequestAction
	22, // 21: crdt.ORSetRequestAction.get:type_name -> crdt.Get
	23, // 22: crdt.ORSetRequestAction.delete:type_name -> crdt.Delete
	34, // 23: crdt.ORSetRequestAction.add:type_name -> crdt.ORSetAdd
	35, // 24: crdt.ORSetRequestAction.remove:type_name -> crdt.ORSetRemove
	36, // 25: crdt.ORSetResponse.value:type_name -> crdt.ORSetValue
	17, // 26: crdt.FlagRequest.actions:type_name -> crdt.FlagRequestAction
	22, // 27: crdt.FlagRequestAction.get:type_name -> crdt.Get
	23, // 28: crdt.FlagRequestAction.delete:type_name -> crdt.Delete
	38, // 29: crdt.FlagRequestAction.enable:type_name -> crdt.FlagEnable
	39, // 30: crdt.FlagResponse.value:type_name -> crdt.FlagValue
	20, // 31: crdt.LWWRegisterRequest.actions:type_name -> crdt.LWWRegisterRequestAction
	22, // 32: crdt.LWWRegisterRequestAction.get:type_name -> crdt.Get
	23, // 33: crdt.LWWRegisterRequestAction.delete:type_name -> crdt.Delete
	40, // 34: crdt.LWWRegisterRequestAction.set:type_name -> crdt.LWWRegisterSet
	41, // 35: crdt.LWWRegisterRequestAction.setWithClock:type_name -> crdt.LWWRegisterSetWithClock
	42, // 36: crdt.LWWRegisterResponse.value:type_name -> crdt.LWWRegisterValue
	52, // 37: crdt.AnySupportType.any_value:type_name -> google.protobuf.Any
	24, // 38: crdt.GSetAdd.value:type_name -> crdt.AnySupportType
	24, // 39: crdt.GSetValue.values:type_name -> crdt.AnySupportType
	24, // 40: crdt.GSetValueAnySupport.values:type_name -> crdt.AnySupportType
	24, // 41: crdt.ORSetAdd.value:type_name -> crdt.AnySupportType
	24, // 42: crdt.ORSetRemove.value:type_name -> crdt.AnySupportType
	52, // 43: crdt.ORSetValue.values:type_name -> google.protobuf.Any
	24, // 44: crdt.LWWRegisterSet.value:type_name -> crdt.AnySupportType
	24, // 45: crdt.LWWRegisterSetWithClock.value:type_name -> crdt.AnySupportType
	0,  // 46: crdt.LWWRegisterSetWithClock.clock:type_name -> crdt.CrdtClock
	52, // 47: crdt.LWWRegisterValue.value:type_name -> google.protobuf.Any
	52, // 48: crdt.ORMapSet.entry_key:type_name -> google.protobuf.Any
	52, // 49: crdt.ORMapSet.value:type_name -> google.protobuf.Any
	52, // 50: crdt.ORMapKey.value:type_name -> google.protobuf.Any
	52, // 51: crdt.ORMapEntry.entry_key:type_name -> google.protobuf.Any
	52, // 52: crdt.ORMapEntry.value:type_name -> google.protobuf.Any
	45, // 53: crdt.ORMapEntries.values:type_name -> crdt.ORMapEntry
	52, // 54: crdt.ORMapKeys.values:type_name -> google.protobuf.Any
	4,  // 55: crdt.TckCrdt.ProcessGCounter:input_type -> crdt.GCounterRequest
	7,  // 56: crdt.TckCrdt.ProcessPNCounter:input_type -> crdt.PNCounterRequest
	10, // 57: crdt.TckCrdt.ProcessGSet:input_type -> crdt.GSetRequest
	13, // 58: crdt.TckCrdt.ProcessORSet:input_type -> crdt.ORSetRequest
	16, // 59: crdt.TckCrdt.ProcessFlag:input_type -> crdt.FlagRequest
	19, // 60: crdt.TckCrdt.ProcessLWWRegister:input_type -> crdt.LWWRegisterRequest
	1,  // 61: crdt.TckCrdt.ProcessVote:input_type -> crdt.VoteRequest
	43, // 62: crdt.TckCrdt.SetORMap:input_type -> crdt.ORMapSet
	44, // 63: crdt.TckCrdt.DeleteORMap:input_type -> crdt.ORMapKey
	44, // 64: crdt.TckCrdt.ClearORMap:input_type -> crdt.ORMapKey
	22, // 65: crdt.TckCrdt.GetORMapSize:input_type -> crdt.Get
	22, // 66: crdt.TckCrdt.GetORMapEntries:input_type -> crdt.Get
	22, // 67: crdt.TckCrdt.GetORMapKeys:input_type -> crdt.Get
	6,  // 68: crdt.TckCrdt.ProcessGCounter:output_type -> crdt.GCounterResponse
	9,  // 69: crdt.TckCrdt.ProcessPNCounter:output_type -> crdt.PNCounterResponse
	12, // 70: crdt.TckCrdt.ProcessGSet:output_type -> crdt.GSetResponse
	15, // 71: crdt.TckCrdt.ProcessORSet:output_type -> crdt.ORSetResponse
	18, // 72: crdt.TckCrdt.ProcessFlag:output_type -> crdt.FlagResponse
	21, // 73: crdt.TckCrdt.ProcessLWWRegister:output_type -> crdt.LWWRegisterResponse
	3,  // 74: crdt.TckCrdt.ProcessVote:output_type -> crdt.VoteResponse
	46, // 75: crdt.TckCrdt.SetORMap:output_type -> crdt.ORMapEntries
	46, // 76: crdt.TckCrdt.DeleteORMap:output_type -> crdt.ORMapEntries
	46, // 77: crdt.TckCrdt.ClearORMap:output_type -> crdt.ORMapEntries
	47, // 78: crdt.TckCrdt.GetORMapSize:output_type -> crdt.ORMapSize
	46, // 79: crdt.TckCrdt.GetORMapEntries:output_type -> crdt.ORMapEntries
	48, // 80: crdt.TckCrdt.GetORMapKeys:output_type -> crdt.ORMapKeys
	68, // [68:81] is the sub-list for method output_type
	55, // [55:68] is the sub-list for method input_type
	55, // [55:55] is the sub-list for extension type_name
	55, // [55:55] is the sub-list for extension extendee
	0,  // [0:55] is the sub-list for field type_name
}

func init() { file_tck_crdt_proto_init() }
func file_tck_crdt_proto_init() {
	if File_tck_crdt_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tck_crdt_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteRequestAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCounterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCounterRequestAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCounterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PNCounterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PNCounterRequestAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PNCounterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GSetRequestAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ORSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ORSetRequestAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ORSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlagRequestAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LWWRegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LWWRegisterRequestAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LWWRegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Get); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Delete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnySupportType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCounterIncrement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCounterValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PNCounterIncrement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PNCounterDecrement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PNCounterValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GSetAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GSetValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GSetValueAnySupport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GSetSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ORSetAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ORSetRemove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ORSetValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ORSetSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlagEnable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlagValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LWWRegisterSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LWWRegisterSetWithClock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LWWRegisterValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ORMapSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ORMapKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ORMapEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ORMapEntries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ORMapSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ORMapKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelfVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tck_crdt_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Voters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tck_crdt_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*VoteRequestAction_Get)(nil),
		(*VoteRequestAction_Delete)(nil),
		(*VoteRequestAction_Vote)(nil),
	}
	file_tck_crdt_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*GCounterRequestAction_Get)(nil),
		(*GCounterRequestAction_Delete)(nil),
		(*GCounterRequestAction_Increment)(nil),
	}
	file_tck_crdt_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*PNCounterRequestAction_Get)(nil),
		(*PNCounterRequestAction_Delete)(nil),
		(*PNCounterRequestAction_Increment)(nil),
		(*PNCounterRequestAction_Decrement)(nil),
	}
	file_tck_crdt_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*GSetRequestAction_Get)(nil),
		(*GSetRequestAction_Delete)(nil),
		(*GSetRequestAction_Add)(nil),
	}
	file_tck_crdt_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*ORSetRequestAction_Get)(nil),
		(*ORSetRequestAction_Delete)(nil),
		(*ORSetRequestAction_Add)(nil),
		(*ORSetRequestAction_Remove)(nil),
	}
	file_tck_crdt_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*FlagRequestAction_Get)(nil),
		(*FlagRequestAction_Delete)(nil),
		(*FlagRequestAction_Enable)(nil),
	}
	file_tck_crdt_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*LWWRegisterRequestAction_Get)(nil),
		(*LWWRegisterRequestAction_Delete)(nil),
		(*LWWRegisterRequestAction_Set)(nil),
		(*LWWRegisterRequestAction_SetWithClock)(nil),
	}
	file_tck_crdt_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*AnySupportType_AnyValue)(nil),
		(*AnySupportType_StringValue)(nil),
		(*AnySupportType_BytesValue)(nil),
		(*AnySupportType_Int32Value)(nil),
		(*AnySupportType_Int64Value)(nil),
		(*AnySupportType_FloatValue)(nil),
		(*AnySupportType_DoubleValue)(nil),
		(*AnySupportType_BoolValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tck_crdt_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   51,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tck_crdt_proto_goTypes,
		DependencyIndexes: file_tck_crdt_proto_depIdxs,
		EnumInfos:         file_tck_crdt_proto_enumTypes,
		MessageInfos:      file_tck_crdt_proto_msgTypes,
	}.Build()
	File_tck_crdt_proto = out.File
	file_tck_crdt_proto_rawDesc = nil
	file_tck_crdt_proto_goTypes = nil
	file_tck_crdt_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TckCrdtClient is the client API for TckCrdt service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TckCrdtClient interface {
	ProcessGCounter(ctx context.Context, in *GCounterRequest, opts ...grpc.CallOption) (*GCounterResponse, error)
	ProcessPNCounter(ctx context.Context, in *PNCounterRequest, opts ...grpc.CallOption) (*PNCounterResponse, error)
	ProcessGSet(ctx context.Context, in *GSetRequest, opts ...grpc.CallOption) (*GSetResponse, error)
	ProcessORSet(ctx context.Context, in *ORSetRequest, opts ...grpc.CallOption) (*ORSetResponse, error)
	ProcessFlag(ctx context.Context, in *FlagRequest, opts ...grpc.CallOption) (*FlagResponse, error)
	ProcessLWWRegister(ctx context.Context, in *LWWRegisterRequest, opts ...grpc.CallOption) (*LWWRegisterResponse, error)
	//    rpc ProcessORMap (ORMapRequest) returns (ORMapResponse);
	ProcessVote(ctx context.Context, in *VoteRequest, opts ...grpc.CallOption) (*VoteResponse, error)
	SetORMap(ctx context.Context, in *ORMapSet, opts ...grpc.CallOption) (*ORMapEntries, error)
	DeleteORMap(ctx context.Context, in *ORMapKey, opts ...grpc.CallOption) (*ORMapEntries, error)
	ClearORMap(ctx context.Context, in *ORMapKey, opts ...grpc.CallOption) (*ORMapEntries, error)
	GetORMapSize(ctx context.Context, in *Get, opts ...grpc.CallOption) (*ORMapSize, error)
	GetORMapEntries(ctx context.Context, in *Get, opts ...grpc.CallOption) (*ORMapEntries, error)
	GetORMapKeys(ctx context.Context, in *Get, opts ...grpc.CallOption) (*ORMapKeys, error)
}

type tckCrdtClient struct {
	cc grpc.ClientConnInterface
}

func NewTckCrdtClient(cc grpc.ClientConnInterface) TckCrdtClient {
	return &tckCrdtClient{cc}
}

func (c *tckCrdtClient) ProcessGCounter(ctx context.Context, in *GCounterRequest, opts ...grpc.CallOption) (*GCounterResponse, error) {
	out := new(GCounterResponse)
	err := c.cc.Invoke(ctx, "/crdt.TckCrdt/ProcessGCounter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tckCrdtClient) ProcessPNCounter(ctx context.Context, in *PNCounterRequest, opts ...grpc.CallOption) (*PNCounterResponse, error) {
	out := new(PNCounterResponse)
	err := c.cc.Invoke(ctx, "/crdt.TckCrdt/ProcessPNCounter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tckCrdtClient) ProcessGSet(ctx context.Context, in *GSetRequest, opts ...grpc.CallOption) (*GSetResponse, error) {
	out := new(GSetResponse)
	err := c.cc.Invoke(ctx, "/crdt.TckCrdt/ProcessGSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tckCrdtClient) ProcessORSet(ctx context.Context, in *ORSetRequest, opts ...grpc.CallOption) (*ORSetResponse, error) {
	out := new(ORSetResponse)
	err := c.cc.Invoke(ctx, "/crdt.TckCrdt/ProcessORSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tckCrdtClient) ProcessFlag(ctx context.Context, in *FlagRequest, opts ...grpc.CallOption) (*FlagResponse, error) {
	out := new(FlagResponse)
	err := c.cc.Invoke(ctx, "/crdt.TckCrdt/ProcessFlag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tckCrdtClient) ProcessLWWRegister(ctx context.Context, in *LWWRegisterRequest, opts ...grpc.CallOption) (*LWWRegisterResponse, error) {
	out := new(LWWRegisterResponse)
	err := c.cc.Invoke(ctx, "/crdt.TckCrdt/ProcessLWWRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tckCrdtClient) ProcessVote(ctx context.Context, in *VoteRequest, opts ...grpc.CallOption) (*VoteResponse, error) {
	out := new(VoteResponse)
	err := c.cc.Invoke(ctx, "/crdt.TckCrdt/ProcessVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tckCrdtClient) SetORMap(ctx context.Context, in *ORMapSet, opts ...grpc.CallOption) (*ORMapEntries, error) {
	out := new(ORMapEntries)
	err := c.cc.Invoke(ctx, "/crdt.TckCrdt/SetORMap", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tckCrdtClient) DeleteORMap(ctx context.Context, in *ORMapKey, opts ...grpc.CallOption) (*ORMapEntries, error) {
	out := new(ORMapEntries)
	err := c.cc.Invoke(ctx, "/crdt.TckCrdt/DeleteORMap", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tckCrdtClient) ClearORMap(ctx context.Context, in *ORMapKey, opts ...grpc.CallOption) (*ORMapEntries, error) {
	out := new(ORMapEntries)
	err := c.cc.Invoke(ctx, "/crdt.TckCrdt/ClearORMap", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tckCrdtClient) GetORMapSize(ctx context.Context, in *Get, opts ...grpc.CallOption) (*ORMapSize, error) {
	out := new(ORMapSize)
	err := c.cc.Invoke(ctx, "/crdt.TckCrdt/GetORMapSize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tckCrdtClient) GetORMapEntries(ctx context.Context, in *Get, opts ...grpc.CallOption) (*ORMapEntries, error) {
	out := new(ORMapEntries)
	err := c.cc.Invoke(ctx, "/crdt.TckCrdt/GetORMapEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tckCrdtClient) GetORMapKeys(ctx context.Context, in *Get, opts ...grpc.CallOption) (*ORMapKeys, error) {
	out := new(ORMapKeys)
	err := c.cc.Invoke(ctx, "/crdt.TckCrdt/GetORMapKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TckCrdtServer is the server API for TckCrdt service.
type TckCrdtServer interface {
	ProcessGCounter(context.Context, *GCounterRequest) (*GCounterResponse, error)
	ProcessPNCounter(context.Context, *PNCounterRequest) (*PNCounterResponse, error)
	ProcessGSet(context.Context, *GSetRequest) (*GSetResponse, error)
	ProcessORSet(context.Context, *ORSetRequest) (*ORSetResponse, error)
	ProcessFlag(context.Context, *FlagRequest) (*FlagResponse, error)
	ProcessLWWRegister(context.Context, *LWWRegisterRequest) (*LWWRegisterResponse, error)
	//    rpc ProcessORMap (ORMapRequest) returns (ORMapResponse);
	ProcessVote(context.Context, *VoteRequest) (*VoteResponse, error)
	SetORMap(context.Context, *ORMapSet) (*ORMapEntries, error)
	DeleteORMap(context.Context, *ORMapKey) (*ORMapEntries, error)
	ClearORMap(context.Context, *ORMapKey) (*ORMapEntries, error)
	GetORMapSize(context.Context, *Get) (*ORMapSize, error)
	GetORMapEntries(context.Context, *Get) (*ORMapEntries, error)
	GetORMapKeys(context.Context, *Get) (*ORMapKeys, error)
}

// UnimplementedTckCrdtServer can be embedded to have forward compatible implementations.
type UnimplementedTckCrdtServer struct {
}

func (*UnimplementedTckCrdtServer) ProcessGCounter(context.Context, *GCounterRequest) (*GCounterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessGCounter not implemented")
}
func (*UnimplementedTckCrdtServer) ProcessPNCounter(context.Context, *PNCounterRequest) (*PNCounterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessPNCounter not implemented")
}
func (*UnimplementedTckCrdtServer) ProcessGSet(context.Context, *GSetRequest) (*GSetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessGSet not implemented")
}
func (*UnimplementedTckCrdtServer) ProcessORSet(context.Context, *ORSetRequest) (*ORSetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessORSet not implemented")
}
func (*UnimplementedTckCrdtServer) ProcessFlag(context.Context, *FlagRequest) (*FlagResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessFlag not implemented")
}
func (*UnimplementedTckCrdtServer) ProcessLWWRegister(context.Context, *LWWRegisterRequest) (*LWWRegisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessLWWRegister not implemented")
}
func (*UnimplementedTckCrdtServer) ProcessVote(context.Context, *VoteRequest) (*VoteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessVote not implemented")
}
func (*UnimplementedTckCrdtServer) SetORMap(context.Context, *ORMapSet) (*ORMapEntries, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetORMap not implemented")
}
func (*UnimplementedTckCrdtServer) DeleteORMap(context.Context, *ORMapKey) (*ORMapEntries, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteORMap not implemented")
}
func (*UnimplementedTckCrdtServer) ClearORMap(context.Context, *ORMapKey) (*ORMapEntries, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClearORMap not implemented")
}
func (*UnimplementedTckCrdtServer) GetORMapSize(context.Context, *Get) (*ORMapSize, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetORMapSize not implemented")
}
func (*UnimplementedTckCrdtServer) GetORMapEntries(context.Context, *Get) (*ORMapEntries, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetORMapEntries not implemented")
}
func (*UnimplementedTckCrdtServer) GetORMapKeys(context.Context, *Get) (*ORMapKeys, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetORMapKeys not implemented")
}

func RegisterTckCrdtServer(s *grpc.Server, srv TckCrdtServer) {
	s.RegisterService(&_TckCrdt_serviceDesc, srv)
}

func _TckCrdt_ProcessGCounter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GCounterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TckCrdtServer).ProcessGCounter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crdt.TckCrdt/ProcessGCounter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TckCrdtServer).ProcessGCounter(ctx, req.(*GCounterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TckCrdt_ProcessPNCounter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PNCounterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TckCrdtServer).ProcessPNCounter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crdt.TckCrdt/ProcessPNCounter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TckCrdtServer).ProcessPNCounter(ctx, req.(*PNCounterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TckCrdt_ProcessGSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GSetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TckCrdtServer).ProcessGSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crdt.TckCrdt/ProcessGSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TckCrdtServer).ProcessGSet(ctx, req.(*GSetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TckCrdt_ProcessORSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ORSetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TckCrdtServer).ProcessORSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crdt.TckCrdt/ProcessORSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TckCrdtServer).ProcessORSet(ctx, req.(*ORSetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TckCrdt_ProcessFlag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FlagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TckCrdtServer).ProcessFlag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crdt.TckCrdt/ProcessFlag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TckCrdtServer).ProcessFlag(ctx, req.(*FlagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TckCrdt_ProcessLWWRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LWWRegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TckCrdtServer).ProcessLWWRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crdt.TckCrdt/ProcessLWWRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TckCrdtServer).ProcessLWWRegister(ctx, req.(*LWWRegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TckCrdt_ProcessVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TckCrdtServer).ProcessVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crdt.TckCrdt/ProcessVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TckCrdtServer).ProcessVote(ctx, req.(*VoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TckCrdt_SetORMap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ORMapSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TckCrdtServer).SetORMap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crdt.TckCrdt/SetORMap",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TckCrdtServer).SetORMap(ctx, req.(*ORMapSet))
	}
	return interceptor(ctx, in, info, handler)
}

func _TckCrdt_DeleteORMap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ORMapKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TckCrdtServer).DeleteORMap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crdt.TckCrdt/DeleteORMap",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TckCrdtServer).DeleteORMap(ctx, req.(*ORMapKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _TckCrdt_ClearORMap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ORMapKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TckCrdtServer).ClearORMap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crdt.TckCrdt/ClearORMap",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TckCrdtServer).ClearORMap(ctx, req.(*ORMapKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _TckCrdt_GetORMapSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Get)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TckCrdtServer).GetORMapSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crdt.TckCrdt/GetORMapSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TckCrdtServer).GetORMapSize(ctx, req.(*Get))
	}
	return interceptor(ctx, in, info, handler)
}

func _TckCrdt_GetORMapEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Get)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TckCrdtServer).GetORMapEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crdt.TckCrdt/GetORMapEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TckCrdtServer).GetORMapEntries(ctx, req.(*Get))
	}
	return interceptor(ctx, in, info, handler)
}

func _TckCrdt_GetORMapKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Get)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TckCrdtServer).GetORMapKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crdt.TckCrdt/GetORMapKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TckCrdtServer).GetORMapKeys(ctx, req.(*Get))
	}
	return interceptor(ctx, in, info, handler)
}

var _TckCrdt_serviceDesc = grpc.ServiceDesc{
	ServiceName: "crdt.TckCrdt",
	HandlerType: (*TckCrdtServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ProcessGCounter",
			Handler:    _TckCrdt_ProcessGCounter_Handler,
		},
		{
			MethodName: "ProcessPNCounter",
			Handler:    _TckCrdt_ProcessPNCounter_Handler,
		},
		{
			MethodName: "ProcessGSet",
			Handler:    _TckCrdt_ProcessGSet_Handler,
		},
		{
			MethodName: "ProcessORSet",
			Handler:    _TckCrdt_ProcessORSet_Handler,
		},
		{
			MethodName: "ProcessFlag",
			Handler:    _TckCrdt_ProcessFlag_Handler,
		},
		{
			MethodName: "ProcessLWWRegister",
			Handler:    _TckCrdt_ProcessLWWRegister_Handler,
		},
		{
			MethodName: "ProcessVote",
			Handler:    _TckCrdt_ProcessVote_Handler,
		},
		{
			MethodName: "SetORMap",
			Handler:    _TckCrdt_SetORMap_Handler,
		},
		{
			MethodName: "DeleteORMap",
			Handler:    _TckCrdt_DeleteORMap_Handler,
		},
		{
			MethodName: "ClearORMap",
			Handler:    _TckCrdt_ClearORMap_Handler,
		},
		{
			MethodName: "GetORMapSize",
			Handler:    _TckCrdt_GetORMapSize_Handler,
		},
		{
			MethodName: "GetORMapEntries",
			Handler:    _TckCrdt_GetORMapEntries_Handler,
		},
		{
			MethodName: "GetORMapKeys",
			Handler:    _TckCrdt_GetORMapKeys_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tck_crdt.proto",
}
